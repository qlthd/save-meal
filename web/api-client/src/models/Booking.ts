/* tslint:disable */
/* eslint-disable */
/**
 * Save meal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Booking
 */
export interface Booking {
    /**
     * 
     * @type {number}
     * @memberof Booking
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Booking
     */
    associationId: number;
    /**
     * 
     * @type {number}
     * @memberof Booking
     */
    foodDonationId: number;
    /**
     * 
     * @type {Date}
     * @memberof Booking
     */
    createdAt: Date;
    /**
     * 
     * @type {Booking}
     * @memberof Booking
     */
    association: Booking | null;
}

/**
 * Check if a given object implements the Booking interface.
 */
export function instanceOfBooking(value: object): value is Booking {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('associationId' in value) || value['associationId'] === undefined) return false;
    if (!('foodDonationId' in value) || value['foodDonationId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('association' in value) || value['association'] === undefined) return false;
    return true;
}

export function BookingFromJSON(json: any): Booking {
    return BookingFromJSONTyped(json, false);
}

export function BookingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Booking {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'associationId': json['associationId'],
        'foodDonationId': json['foodDonationId'],
        'createdAt': (new Date(json['createdAt'])),
        'association': BookingFromJSON(json['association']),
    };
}

export function BookingToJSON(json: any): Booking {
    return BookingToJSONTyped(json, false);
}

export function BookingToJSONTyped(value?: Booking | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'associationId': value['associationId'],
        'foodDonationId': value['foodDonationId'],
        'createdAt': ((value['createdAt']).toISOString()),
        'association': BookingToJSON(value['association']),
    };
}

